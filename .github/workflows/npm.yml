name: CI
env:
  DEBUG: napi:*
  APP_NAME: scylla_pg_js
  MACOSX_DEPLOYMENT_TARGET: '10.13'
'on':
  push:
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            build: |
              cd scylla_pg_js && npm run build -- --target x86_64-apple-darwin
          - host: windows-latest
            build: cd scylla_pg_js && npm run build -- --target x86_64-pc-windows-msvc
            target: x86_64-pc-windows-msvc
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            build: |-
              set -e &&
              cd scylla_pg_js && npm run build -- --target x86_64-unknown-linux-gnu
          - host: macos-latest
            target: aarch64-apple-darwin
            build: |
              cd scylla_pg_js && npm run build -- --target aarch64-apple-darwin
    name: stable - ${{ matrix.settings.target }} - node@16
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{ !matrix.settings.docker }}
        with:
          node-version: 16
          check-latest: true
      - name: Install
        uses: actions-rs/toolchain@v1
        if: ${{ !matrix.settings.docker }}
        with:
          profile: minimal
          override: true
          toolchain: stable
          target: ${{ matrix.settings.target }}
      - name: Cache cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: ${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}
      - uses: goto-bus-stop/setup-zig@v2
        if: ${{ matrix.settings.target == 'armv7-unknown-linux-gnueabihf' }}
        with:
          version: 0.10.0
      - name: Setup toolchain
        run: ${{ matrix.settings.setup }}
        if: ${{ matrix.settings.setup }}
        shell: bash
      - name: Install dependencies
        run: cd scylla_pg_js && npm install
      - name: cargo build
        run: cargo build
      - run: bin/clippy-pedantic.sh
      - name: Build
        run: ${{ matrix.settings.build }}
        shell: bash
      - name: Set up Database
        run: docker-compose up -d
        if: ${{ matrix.settings.host != 'windows-latest' }}

      - name: Run Migrations
        run: PATH=$PATH:$(pwd) bin/component-test-setup.sh
        if: ${{ matrix.settings.host != 'windows-latest' }}


      - name: component test
        run: make withenv RECIPE=test.component
        if: ${{ matrix.settings.host != 'windows-latest' }}

      - name: List packages
        run: ls -R .
        shell: bash

      - name: Test bindings
        run: cd scylla_pg_js && npm run test

      - name: setup docker container env for macos
        run: brew install colima docker docker-compose
        if: ${{ matrix.settings.host == 'macos-latest' }}

      - name: setup docker container env for macos
      - run: colima start
        if: ${{ matrix.settings.host == 'macos-latest' }}

      - name: Test bindings
        run: cd scylla_pg_js && npm run test
        if: ${{ matrix.settings.host != 'windows-latest' }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: bindings-${{ matrix.settings.target }}
          path: scylla_pg_js/${{ env.APP_NAME }}.*.node
          if-no-files-found: error
  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true
      - name: Install dependencies
        run: cd scylla_pg_js && npm install
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Move artifacts
        run: npm run artifacts
      - name: List packages
        run: ls -R ./npm
        shell: bash
      - name: Publish
        run: |
          cd scylla_pg_js && npm publish --tag next --access public
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
